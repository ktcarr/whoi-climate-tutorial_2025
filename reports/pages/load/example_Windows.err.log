Traceback (most recent call last):
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
## should we load from the cloud?
LOAD_FROM_CLOUD = False

## specify lon/lat range
LON_RANGE = [260, 359.9]
LAT_RANGE = [0, 70]

## arguments shared by each loading function (server and cloud)
shared_args = dict(lon_range=LON_RANGE, lat_range=LAT_RANGE, member_id=10)

## keep track of loading time
t0 = time.time()

if LOAD_FROM_CLOUD:
    data = load_cesm_from_cloud(varname="TREFHT", load_ssp370=True, **shared_args)

else:
    data = load_cesm_from_server(
        varname="SST", lens_fp=LENS_FP, lsm_fp=LSM_FP, **shared_args
    )

print(f"Elapsed time: {time.time()-t0:.1f} seconds")
------------------


[31m---------------------------------------------------------------------------[39m
[31mIndexError[39m                                Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[5][39m[32m, line 18[39m
[32m     15[39m     data = load_cesm_from_cloud(varname=[33m"[39m[33mTREFHT[39m[33m"[39m, load_ssp370=[38;5;28;01mTrue[39;00m, **shared_args)
[32m     17[39m [38;5;28;01melse[39;00m:
[32m---> [39m[32m18[39m     data = [43mload_cesm_from_server[49m[43m([49m
[32m     19[39m [43m        [49m[43mvarname[49m[43m=[49m[33;43m"[39;49m[33;43mSST[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[43mlens_fp[49m[43m=[49m[43mLENS_FP[49m[43m,[49m[43m [49m[43mlsm_fp[49m[43m=[49m[43mLSM_FP[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mshared_args[49m
[32m     20[39m [43m    [49m[43m)[49m
[32m     22[39m [38;5;28mprint[39m([33mf[39m[33m"[39m[33mElapsed time: [39m[38;5;132;01m{[39;00mtime.time()-t0[38;5;132;01m:[39;00m[33m.1f[39m[38;5;132;01m}[39;00m[33m seconds[39m[33m"[39m)

[36mCell[39m[36m [39m[32mIn[2][39m[32m, line 339[39m, in [36mload_cesm_from_server[39m[34m(lon_range, lat_range, lens_fp, lsm_fp, varname, member_id)[39m
[32m    336[39m load_kwargs = [38;5;28mdict[39m(lens_fp=lens_fp, varname=varname, member_id=member_id)
[32m    338[39m [38;5;66;03m## Load data[39;00m
[32m--> [39m[32m339[39m data_hist = [43mload_simulation[49m[43m([49m[43msimulation_type[49m[43m=[49m[33;43m"[39;49m[33;43mhist[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mload_kwargs[49m[43m)[49m.compute()
[32m    340[39m data_rcp = load_simulation(simulation_type=[33m"[39m[33mrcp85[39m[33m"[39m, **load_kwargs).compute()
[32m    342[39m [38;5;66;03m## concatenate in time[39;00m

[36mCell[39m[36m [39m[32mIn[2][39m[32m, line 226[39m, in [36mload_simulation[39m[34m(lens_fp, varname, member_id, simulation_type, preprocess_func)[39m
[32m    221[39m     [38;5;28mprint[39m([33m"[39m[33mNot a valid simulation type[39m[33m"[39m)
[32m    223[39m [38;5;66;03m#### 3. open the relevant datasets, applying preprocessing function[39;00m
[32m    224[39m 
[32m    225[39m [38;5;66;03m## filepath to data[39;00m
[32m--> [39m[32m226[39m fp = [38;5;28;43mlist[39;49m[43m([49m[43mdata_fp[49m[43m.[49m[43mglob[49m[43m([49m[43mfile_pattern[49m[43m)[49m[43m)[49m[43m[[49m[32;43m0[39;49m[43m][49m
[32m    228[39m [38;5;66;03m## load data[39;00m
[32m    229[39m data = xr.open_dataset(fp, chunks=[38;5;28;01mNone[39;00m, decode_timedelta=[38;5;28;01mTrue[39;00m)

[31mIndexError[39m: list index out of range

