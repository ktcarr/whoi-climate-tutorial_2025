Traceback (most recent call last):
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/theo/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
## reanalysis
slp_noaa = get_trimmed_data(
    data_loader_fn=lambda: load_noaa(fp_noaa_slp),
    fp_out=pathlib.Path(save_fp, "slp_noaa.nc"),
)
slp_era = get_trimmed_data(
    data_loader_fn=lambda: load_era(fp_era_slp),
    fp_out=pathlib.Path(save_fp, "slp_era.nc"),
)

## LME
kwargs = dict(save_fp=save_fp, fp_in=fp_lme)
slp_lme = get_trimmed_data_lme(
    forcing_type="all", member_ids=np.arange(1, 14), **kwargs
)
slp_lme_volc = get_trimmed_data_lme(
    forcing_type="volcanic", member_ids=np.arange(1, 6), **kwargs
)
slp_lme_GHG = get_trimmed_data_lme(
    forcing_type="GHG", member_ids=np.arange(1, 4), **kwargs
)
slp_lme_orb = get_trimmed_data_lme(
    forcing_type="orbital", member_ids=np.arange(1, 4), **kwargs
)
------------------


[31m---------------------------------------------------------------------------[39m
[31mKeyError[39m                                  Traceback (most recent call last)
[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/file_manager.py:211[39m, in [36mCachingFileManager._acquire_with_cache_info[39m[34m(self, needs_lock)[39m
[32m    210[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m211[39m     file = [38;5;28;43mself[39;49m[43m.[49m[43m_cache[49m[43m[[49m[38;5;28;43mself[39;49m[43m.[49m[43m_key[49m[43m][49m
[32m    212[39m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m:

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/lru_cache.py:56[39m, in [36mLRUCache.__getitem__[39m[34m(self, key)[39m
[32m     55[39m [38;5;28;01mwith[39;00m [38;5;28mself[39m._lock:
[32m---> [39m[32m56[39m     value = [38;5;28;43mself[39;49m[43m.[49m[43m_cache[49m[43m[[49m[43mkey[49m[43m][49m
[32m     57[39m     [38;5;28mself[39m._cache.move_to_end(key)

[31mKeyError[39m: [<class 'netCDF4._netCDF4.Dataset'>, ('/Users/theo/research/whoi-climate-tutorial_2025/docs/pages/tutorial_11-7/data/cmip5_reanalysis_raw/prmsl.mon.mean.nc',), 'r', (('clobber', True), ('diskless', False), ('format', 'NETCDF4'), ('persist', False)), '9b95b1cc-32f3-412c-9c06-b0394be9dee3']

During handling of the above exception, another exception occurred:

[31mFileNotFoundError[39m                         Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[8][39m[32m, line 2[39m
[32m      1[39m [38;5;66;03m## reanalysis[39;00m
[32m----> [39m[32m2[39m slp_noaa = [43mget_trimmed_data[49m[43m([49m
[32m      3[39m [43m    [49m[43mdata_loader_fn[49m[43m=[49m[38;5;28;43;01mlambda[39;49;00m[43m:[49m[43m [49m[43mload_noaa[49m[43m([49m[43mfp_noaa_slp[49m[43m)[49m[43m,[49m
[32m      4[39m [43m    [49m[43mfp_out[49m[43m=[49m[43mpathlib[49m[43m.[49m[43mPath[49m[43m([49m[43msave_fp[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mslp_noaa.nc[39;49m[33;43m"[39;49m[43m)[49m[43m,[49m
[32m      5[39m [43m)[49m
[32m      6[39m slp_era = get_trimmed_data(
[32m      7[39m     data_loader_fn=[38;5;28;01mlambda[39;00m: load_era(fp_era_slp),
[32m      8[39m     fp_out=pathlib.Path(save_fp, [33m"[39m[33mslp_era.nc[39m[33m"[39m),
[32m      9[39m )
[32m     11[39m [38;5;66;03m## LME[39;00m

[36mCell[39m[36m [39m[32mIn[4][39m[32m, line 165[39m, in [36mget_trimmed_data[39m[34m(data_loader_fn, fp_out)[39m
[32m    164[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mget_trimmed_data[39m(data_loader_fn, fp_out):
[32m--> [39m[32m165[39m     [38;5;28;01mreturn[39;00m [43mload_prepped_data[49m[43m([49m[43mdata_loader_fn[49m[43m=[49m[43mdata_loader_fn[49m[43m,[49m[43m [49m[43mfp_out[49m[43m=[49m[43mfp_out[49m[43m,[49m[43m [49m[43mprep_fn[49m[43m=[49m[43mtrim[49m[43m)[49m

[36mCell[39m[36m [39m[32mIn[4][39m[32m, line 131[39m, in [36mload_prepped_data[39m[34m(data_loader_fn, prep_fn, fp_out)[39m
[32m    126[39m     data_prepped = xr.open_dataset(fp_out).compute()
[32m    128[39m [38;5;28;01melse[39;00m:
[32m    129[39m 
[32m    130[39m     [38;5;66;03m## Load data, trim it, and save to file[39;00m
[32m--> [39m[32m131[39m     data = [43mdata_loader_fn[49m[43m([49m[43m)[49m
[32m    132[39m     data_prepped = prep_fn(data)
[32m    133[39m     data_prepped.to_netcdf(fp_out)

[36mCell[39m[36m [39m[32mIn[8][39m[32m, line 3[39m, in [36m<lambda>[39m[34m()[39m
[32m      1[39m [38;5;66;03m## reanalysis[39;00m
[32m      2[39m slp_noaa = get_trimmed_data(
[32m----> [39m[32m3[39m     data_loader_fn=[38;5;28;01mlambda[39;00m: [43mload_noaa[49m[43m([49m[43mfp_noaa_slp[49m[43m)[49m,
[32m      4[39m     fp_out=pathlib.Path(save_fp, [33m"[39m[33mslp_noaa.nc[39m[33m"[39m),
[32m      5[39m )
[32m      6[39m slp_era = get_trimmed_data(
[32m      7[39m     data_loader_fn=[38;5;28;01mlambda[39;00m: load_era(fp_era_slp),
[32m      8[39m     fp_out=pathlib.Path(save_fp, [33m"[39m[33mslp_era.nc[39m[33m"[39m),
[32m      9[39m )
[32m     11[39m [38;5;66;03m## LME[39;00m

[36mCell[39m[36m [39m[32mIn[4][39m[32m, line 48[39m, in [36mload_noaa[39m[34m(fp_slp_noaa)[39m
[32m     45[39m [38;5;250m[39m[33;03m"""NOAA CIRES data and update coordinates"""[39;00m
[32m     47[39m [38;5;66;03m## open raw data and select PSL variable[39;00m
[32m---> [39m[32m48[39m data = [43mxr[49m[43m.[49m[43mopen_dataset[49m[43m([49m[43mfp_slp_noaa[49m[43m)[49m[[33m"[39m[33mprmsl[39m[33m"[39m]
[32m     50[39m [38;5;66;03m## switch longitude range from [0,360) to (-180,180][39;00m
[32m     51[39m data = switch_longitude_range(data)

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/api.py:687[39m, in [36mopen_dataset[39m[34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, inline_array, chunked_array_type, from_array_kwargs, backend_kwargs, **kwargs)[39m
[32m    675[39m decoders = _resolve_decoders_kwargs(
[32m    676[39m     decode_cf,
[32m    677[39m     open_backend_dataset_parameters=backend.open_dataset_parameters,
[32m   (...)[39m[32m    683[39m     decode_coords=decode_coords,
[32m    684[39m )
[32m    686[39m overwrite_encoded_chunks = kwargs.pop([33m"[39m[33moverwrite_encoded_chunks[39m[33m"[39m, [38;5;28;01mNone[39;00m)
[32m--> [39m[32m687[39m backend_ds = [43mbackend[49m[43m.[49m[43mopen_dataset[49m[43m([49m
[32m    688[39m [43m    [49m[43mfilename_or_obj[49m[43m,[49m
[32m    689[39m [43m    [49m[43mdrop_variables[49m[43m=[49m[43mdrop_variables[49m[43m,[49m
[32m    690[39m [43m    [49m[43m*[49m[43m*[49m[43mdecoders[49m[43m,[49m
[32m    691[39m [43m    [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m,[49m
[32m    692[39m [43m[49m[43m)[49m
[32m    693[39m ds = _dataset_from_backend_dataset(
[32m    694[39m     backend_ds,
[32m    695[39m     filename_or_obj,
[32m   (...)[39m[32m    705[39m     **kwargs,
[32m    706[39m )
[32m    707[39m [38;5;28;01mreturn[39;00m ds

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/netCDF4_.py:666[39m, in [36mNetCDF4BackendEntrypoint.open_dataset[39m[34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, group, mode, format, clobber, diskless, persist, auto_complex, lock, autoclose)[39m
[32m    644[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mopen_dataset[39m(
[32m    645[39m     [38;5;28mself[39m,
[32m    646[39m     filename_or_obj: [38;5;28mstr[39m | os.PathLike[Any] | ReadBuffer | AbstractDataStore,
[32m   (...)[39m[32m    663[39m     autoclose=[38;5;28;01mFalse[39;00m,
[32m    664[39m ) -> Dataset:
[32m    665[39m     filename_or_obj = _normalize_path(filename_or_obj)
[32m--> [39m[32m666[39m     store = [43mNetCDF4DataStore[49m[43m.[49m[43mopen[49m[43m([49m
[32m    667[39m [43m        [49m[43mfilename_or_obj[49m[43m,[49m
[32m    668[39m [43m        [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m    669[39m [43m        [49m[38;5;28;43mformat[39;49m[43m=[49m[38;5;28;43mformat[39;49m[43m,[49m
[32m    670[39m [43m        [49m[43mgroup[49m[43m=[49m[43mgroup[49m[43m,[49m
[32m    671[39m [43m        [49m[43mclobber[49m[43m=[49m[43mclobber[49m[43m,[49m
[32m    672[39m [43m        [49m[43mdiskless[49m[43m=[49m[43mdiskless[49m[43m,[49m
[32m    673[39m [43m        [49m[43mpersist[49m[43m=[49m[43mpersist[49m[43m,[49m
[32m    674[39m [43m        [49m[43mauto_complex[49m[43m=[49m[43mauto_complex[49m[43m,[49m
[32m    675[39m [43m        [49m[43mlock[49m[43m=[49m[43mlock[49m[43m,[49m
[32m    676[39m [43m        [49m[43mautoclose[49m[43m=[49m[43mautoclose[49m[43m,[49m
[32m    677[39m [43m    [49m[43m)[49m
[32m    679[39m     store_entrypoint = StoreBackendEntrypoint()
[32m    680[39m     [38;5;28;01mwith[39;00m close_on_error(store):

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/netCDF4_.py:452[39m, in [36mNetCDF4DataStore.open[39m[34m(cls, filename, mode, format, group, clobber, diskless, persist, auto_complex, lock, lock_maker, autoclose)[39m
[32m    448[39m     kwargs[[33m"[39m[33mauto_complex[39m[33m"[39m] = auto_complex
[32m    449[39m manager = CachingFileManager(
[32m    450[39m     netCDF4.Dataset, filename, mode=mode, kwargs=kwargs
[32m    451[39m )
[32m--> [39m[32m452[39m [38;5;28;01mreturn[39;00m [38;5;28;43mcls[39;49m[43m([49m[43mmanager[49m[43m,[49m[43m [49m[43mgroup[49m[43m=[49m[43mgroup[49m[43m,[49m[43m [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m[43m [49m[43mlock[49m[43m=[49m[43mlock[49m[43m,[49m[43m [49m[43mautoclose[49m[43m=[49m[43mautoclose[49m[43m)[49m

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/netCDF4_.py:393[39m, in [36mNetCDF4DataStore.__init__[39m[34m(self, manager, group, mode, lock, autoclose)[39m
[32m    391[39m [38;5;28mself[39m._group = group
[32m    392[39m [38;5;28mself[39m._mode = mode
[32m--> [39m[32m393[39m [38;5;28mself[39m.format = [38;5;28;43mself[39;49m[43m.[49m[43mds[49m.data_model
[32m    394[39m [38;5;28mself[39m._filename = [38;5;28mself[39m.ds.filepath()
[32m    395[39m [38;5;28mself[39m.is_remote = is_remote_uri([38;5;28mself[39m._filename)

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/netCDF4_.py:461[39m, in [36mNetCDF4DataStore.ds[39m[34m(self)[39m
[32m    459[39m [38;5;129m@property[39m
[32m    460[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mds[39m([38;5;28mself[39m):
[32m--> [39m[32m461[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_acquire[49m[43m([49m[43m)[49m

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/netCDF4_.py:455[39m, in [36mNetCDF4DataStore._acquire[39m[34m(self, needs_lock)[39m
[32m    454[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_acquire[39m([38;5;28mself[39m, needs_lock=[38;5;28;01mTrue[39;00m):
[32m--> [39m[32m455[39m [43m    [49m[38;5;28;43;01mwith[39;49;00m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43m_manager[49m[43m.[49m[43macquire_context[49m[43m([49m[43mneeds_lock[49m[43m)[49m[43m [49m[38;5;28;43;01mas[39;49;00m[43m [49m[43mroot[49m[43m:[49m
[32m    456[39m [43m        [49m[43mds[49m[43m [49m[43m=[49m[43m [49m[43m_nc4_require_group[49m[43m([49m[43mroot[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43m_group[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43m_mode[49m[43m)[49m
[32m    457[39m     [38;5;28;01mreturn[39;00m ds

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/contextlib.py:137[39m, in [36m_GeneratorContextManager.__enter__[39m[34m(self)[39m
[32m    135[39m [38;5;28;01mdel[39;00m [38;5;28mself[39m.args, [38;5;28mself[39m.kwds, [38;5;28mself[39m.func
[32m    136[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m137[39m     [38;5;28;01mreturn[39;00m [38;5;28mnext[39m([38;5;28mself[39m.gen)
[32m    138[39m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m:
[32m    139[39m     [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m([33m"[39m[33mgenerator didn[39m[33m'[39m[33mt yield[39m[33m"[39m) [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;28;01mNone[39;00m

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/file_manager.py:199[39m, in [36mCachingFileManager.acquire_context[39m[34m(self, needs_lock)[39m
[32m    196[39m [38;5;129m@contextlib[39m.contextmanager
[32m    197[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34macquire_context[39m([38;5;28mself[39m, needs_lock=[38;5;28;01mTrue[39;00m):
[32m    198[39m [38;5;250m    [39m[33;03m"""Context manager for acquiring a file."""[39;00m
[32m--> [39m[32m199[39m     file, cached = [38;5;28;43mself[39;49m[43m.[49m[43m_acquire_with_cache_info[49m[43m([49m[43mneeds_lock[49m[43m)[49m
[32m    200[39m     [38;5;28;01mtry[39;00m:
[32m    201[39m         [38;5;28;01myield[39;00m file

[36mFile [39m[32m~/research/whoi-climate-tutorial_2025/envs/lib/python3.11/site-packages/xarray/backends/file_manager.py:217[39m, in [36mCachingFileManager._acquire_with_cache_info[39m[34m(self, needs_lock)[39m
[32m    215[39m     kwargs = kwargs.copy()
[32m    216[39m     kwargs[[33m"[39m[33mmode[39m[33m"[39m] = [38;5;28mself[39m._mode
[32m--> [39m[32m217[39m file = [38;5;28;43mself[39;49m[43m.[49m[43m_opener[49m[43m([49m[43m*[49m[38;5;28;43mself[39;49m[43m.[49m[43m_args[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    218[39m [38;5;28;01mif[39;00m [38;5;28mself[39m._mode == [33m"[39m[33mw[39m[33m"[39m:
[32m    219[39m     [38;5;66;03m# ensure file doesn't get overridden when opened again[39;00m
[32m    220[39m     [38;5;28mself[39m._mode = [33m"[39m[33ma[39m[33m"[39m

[36mFile [39m[32msrc/netCDF4/_netCDF4.pyx:2521[39m, in [36mnetCDF4._netCDF4.Dataset.__init__[39m[34m()[39m

[36mFile [39m[32msrc/netCDF4/_netCDF4.pyx:2158[39m, in [36mnetCDF4._netCDF4._ensure_nc_success[39m[34m()[39m

[31mFileNotFoundError[39m: [Errno 2] No such file or directory: '/Users/theo/research/whoi-climate-tutorial_2025/docs/pages/tutorial_11-7/data/cmip5_reanalysis_raw/prmsl.mon.mean.nc'

